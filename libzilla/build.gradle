apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.zillachan'
ext {
    bintrayRepo = 'maven'
    bintrayName = 'LibZilla'
    publishedGroupId = 'com.rainim'
    libraryName = 'LibZilla'
    artifact = 'libzilla'
    libraryDescription = 'An Android Util Library'
    siteUrl = 'https://github.com/zillachan/LibZilla'
    gitUrl = 'https://github.com/zillachan/LibZilla.git'
    libraryVersion = VERSION_NAME
    developerId = 'zilla'
    developerName = 'zillachan'
    developerEmail = 'zillachan@gmail.com'
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MINI_SDK_VERSION as int
        targetSdkVersion COMPILE_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.github.snowdream.android.util:log:1.0.4'
    compile 'joda-time:joda-time:2.3'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.retrofit:retrofit:1.8.0'

//    compile 'com.google.code.gson:gson:2.5' // gson
//    compile 'com.squareup.retrofit2:converter-gson:2.0.1'
//    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.1'//rxjava support
    //retrofit 2.0 support
//    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    //logLevel
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    compile 'com.mobsandgeeks:android-saripaar:1.0.3'
    compile 'com.squareup.picasso:picasso:2.4.0'
//    compile 'com.jakewharton:butterknife:6.0.0'
    //butterknife 7 support
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.squareup:otto:1.3.5'
    //aspectj
    compile 'org.aspectj:aspectjrt:1.8.1'
}
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
apply from: '../installv1.gradle'
apply from: '../bintrayv1.gradle'

import com.android.build.gradle.LibraryPlugin
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

android.libraryVariants.all { variant ->
    LibraryPlugin plugin = project.plugins.getPlugin(LibraryPlugin)
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.6",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", plugin.project.android.bootClasspath.join(
                File.pathSeparator)]

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler)

        def log = project.logger
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}